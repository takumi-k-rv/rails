class Todo {
    constructor(textField1, textField2, textField3, textField4, textField5, sendButton) {
        this.textField1 = textField1;
        this.textField2 = textField2;
        this.textField3 = textField3;
        this.textField4 = textField4;
        this.textField5 = textField5;

        this.sendButton = sendButton;
        this.host     = "http://localhost:3001";
        this.setEventListener();
    }

    setEventListener() { //send click
        var _this = this
        this.sendButton.addEventListener("click", function(e) {
            var minX = _this.textField1.value;
            var maxX = _this.textField2.value;
            var minY = _this.textField3.value;
            var maxY = _this.textField4.value;
            var constReal=0;
            var constImg=0;

            var s = _this.textField5.value;
            console.log(s);
            if(s.match(/^(\d+)\+(\d+)i$/)) {
                constReal=s.replace(/^(\d+)\+(\d+)i$/,"$1");
                constImg=s.replace(/^(\d+)\+(\d+)i$/,"$2");
            } else if(s.match(/^(\d+)i$/)) {
                constReal=0;
                constImg=s.replace(/^(\d+)i$/,"$1");
            } else if(s.match(/^(\d+)$/)) {
                constReal=s.replace(/^(\d+)$/,"$1");
                constImg=0;
            }else if(s.match(/^(\d+)\+i$/)) {
                constReal=s.replace(/^(\d+)\+i$/,"$1");
                constImg=1;
            } else if(s.match(/^i$/)) {
                constReal=0;
                constImg=1;
            }

            _this.postJulia(minX,maxX,minY,maxY, constReal, constImg);
        });
    }

    postJulia(minX, maxX, minY, maxY, constReal, constImg) { // post /julia_params
        var _this = this
        axios.post(this.host + '/julia_params', { min_x: minX, max_x: maxX, min_y: minY, max_y: maxY, real: constReal, img: constImg })
            .then(function(res) {
                var julia = res.data;
                _this.appendJulia(julia);
                _this.removeTextFromInput();
            });
    }

    removeTextFromInput() {
        this.textField1.value = '';
        this.textField2.value = '';
        this.textField3.value = '';
        this.textField4.value = '';
        this.textField5.value = '';
    }

    appendJulia(julia) { // 画像処理
        console.log(julia);
        var canvas1 = document.getElementById('canvas1');
        if ( ! canvas1 || ! canvas1.getContext ) { return false; }
        var c1 = canvas1.getContext('2d');

        // 変数 i,jを定義する
        var i,j;

        for (i = 0; i < 500; i++) {
            for (j = 0; j < 500; j++) {
                c1.beginPath();
                
                var red = (i).toString(10);
                c1.fillStyle = 'rgb(' + red + ',0,0)';

                c1.rect(i,j, 1, 1);
                c1.fill(); // 色を塗る
            }
        }
    }
}


window.onload = function() { //初期状態
    console.log('hello');

    todo = new Todo(
        document.getElementById("field1"),
        document.getElementById("field2"),
        document.getElementById("field3"),
        document.getElementById("field4"),
        document.getElementById("field5"),
        document.getElementById("btn"),
    )
}
